version: '3'
services:

  polkadot:
    image: parity/polkadot:v0.8.24
    volumes:
      - "polkadot-data:/data"
    command: --rpc-external --ws-external --prometheus-external --log error --rpc-cors=all

  vedran:
    command: start --auth-secret=test-secret --log-level info --public-ip vedran --server-port 4000
    build:
      context: .
    ports:
      - "4000:4000"
    container_name: "vedran"

  vedran-daemon:
    image: nodefactory/vedran-daemon:dev
    depends_on:
      - vedran
      - polkadot
    command: --id test-id --lb http://vedran:4000 --node-rpc http://polkadot:9933 --node-ws http://polkadot:9944 --node-metrics http://polkadot:9615 --payout-address 0xtestaddress --log-level info

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
    - ./infra/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 3000:3000
    user: "104"

volumes:
  polkadot-data:
  grafana_data:
